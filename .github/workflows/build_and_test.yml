name: Build and test

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - 'runci/**'
  schedule:
    # 04:00 every Tuesday morning
    - cron: '0 4 * * 2'

env:
  PYTKET_REMOTE_BRAKET_ACCESS_KEY_ID: ${{ secrets.PYTKET_REMOTE_BRAKET_ACCESS_KEY_ID }}
  PYTKET_REMOTE_BRAKET_ACCESS_KEY_SECRET: ${{ secrets.PYTKET_REMOTE_BRAKET_ACCESS_KEY_SECRET }}
  PYTKET_REMOTE_BRAKET_REGION: ${{ secrets.PYTKET_REMOTE_BRAKET_REGION }}
  PYTKET_REMOTE_BRAKET_BUCKET: ${{ secrets.PYTKET_REMOTE_BRAKET_BUCKET }}
  PYTKET_REMOTE_BRAKET_FOLDER: ${{ secrets.PYTKET_REMOTE_BRAKET_FOLDER }}

jobs:
  braket-checks:
    name: Build and test module
    strategy:
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        pyver: ['3.10', '3.12']
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: '0'
        submodules: true
    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/* +refs/heads/*:refs/remotes/origin/*
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.pyver }}
    - name: Build and test (with remote checks, mypy, docs)
      if: (matrix.os == 'ubuntu-latest') && (matrix.pyver == '3.10')
      shell: bash
      run: |
        ./.github/workflows/build-test mypy
        pip install poetry
        cd docs
        bash ./install.sh
        poetry run bash ./build-docs.sh
      env:
        PYTKET_RUN_REMOTE_TESTS: 1
    - name: Build and test (with no remote checks, no mypy)
      if: (matrix.os != 'ubuntu-latest') || (matrix.pyver != '3.10')
      shell: bash
      run: |
        ./.github/workflows/build-test nomypy
